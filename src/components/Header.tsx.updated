import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useLocation } from 'react-router-dom';
import { Menu, X, User, Home, Briefcase, HelpCircle, FileText, Phone, Mail } from 'lucide-react';
import { useNavigation } from '../providers/SmoothNavigationProvider';
import Logo from '/logo-flat.png';

const navLinks = [
  { path: '/', label: 'Home', icon: Home },
  { path: '/about', label: 'About', icon: User },
  { path: '/services', label: 'Services', icon: Briefcase },
  { path: '/work-with-me', label: 'Work With Me', icon: HelpCircle },
];

const Header: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  const [lastScrollY, setLastScrollY] = useState(0);
  const [isHeaderVisible, setIsHeaderVisible] = useState(true);

  const location = useLocation();
  const { Link } = useNavigation();

  // Determine if we're on the Agent Portal page
  const isAgentPortal = location.pathname.includes('agent-portal');

  // Handle scroll events for header visibility and styling
  useEffect(() => {
    const handleScroll = () => {
      const currentScrollY = window.scrollY;

      // Don't hide header when in form mode
      if (!document.body.classList.contains('form-active')) {
        // Detect scroll direction with smaller threshold for responsiveness
        if (currentScrollY > lastScrollY && currentScrollY > 60) {
          // Scrolling down - hide header
          setIsHeaderVisible(false);
        } else if (currentScrollY < lastScrollY) {
          // Scrolling up - show header immediately
          setIsHeaderVisible(true);
        }

        // Update scrolled state for styling
        setScrolled(currentScrollY > 10);
        setLastScrollY(currentScrollY);
      }
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, [lastScrollY]);

  // Close mobile menu on route change
  useEffect(() => {
    setIsOpen(false);
  }, [location]);

  const headerVariants = {
    initial: { y: -10, opacity: 0 },
    animate: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 300,
        damping: 30,
        duration: 0.4,
        ease: "easeOut"
      }
    },
    exit: {
      y: -100,
      opacity: 0,
      transition: {
        duration: 0.2,
        ease: "easeInOut"
      }
    }
  };

  const menuVariants = {
    closed: {
      opacity: 0,
      y: -20,
      transition: {
        duration: 0.2,
        ease: "easeOut"
      }
    },
    open: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.3,
        ease: "easeOut",
        staggerChildren: 0.05,
        delayChildren: 0.05
      }
    }
  };

  const menuItemVariants = {
    closed: { opacity: 0, y: -10 },
    open: { opacity: 1, y: 0 }
  };

  return (
    <AnimatePresence mode="wait">
      <motion.header
        key="header"
        variants={headerVariants}
        initial={false}
        animate={isHeaderVisible ? "animate" : "exit"}
        className={`fixed w-full z-50 transition-all duration-500 ease-in-out ${
          scrolled || isAgentPortal
            ? 'bg-white/95 backdrop-blur-md shadow-lg'
            : 'bg-transparent'
        }`}
      >
        {/* Top bar with contact info - only visible on larger screens and when scrolled */}
        {(scrolled || isAgentPortal) && (
          <div className="hidden md:flex justify-end items-center py-1 px-4 bg-brand-navy text-xs text-white">
            <a href="tel:+5705884637" className="flex items-center mr-4 hover:text-brand-gold transition-colors">
              <Phone size={12} className="mr-1" />
              (570) 588-4637
            </a>
            <a href="mailto:debbie@parealestatesupport.com" className="flex items-center hover:text-brand-gold transition-colors">
              <Mail size={12} className="mr-1" />
              debbie@parealestatesupport.com
            </a>
          </div>
        )}

        <div className="container mx-auto px-4">
          <nav className="flex items-center justify-between h-16 md:h-20">
            {/* Logo with animation */}
            <motion.div
              initial={false}
              animate={{
                opacity: 1,
                x: 0,
                transition: {
                  duration: 0.2,
                  ease: "easeOut"
                }
              }}
              className="relative z-10"
            >
              <Link
                to="/"
                className="relative group flex items-center"
                aria-label="PA Real Estate Support Services home"
              >
                {/* Gradient effect on hover */}
                <div className="absolute -inset-1 bg-gradient-to-r from-brand-blue to-brand-gold rounded-lg opacity-0 group-hover:opacity-75 blur transition duration-300" />
                
                {/* Logo and text */}
                <div className="flex items-center relative">
                  <div className="overflow-hidden rounded-full mr-2">
                    <motion.img
                      src={Logo}
                      alt="PA Real Estate Support Services"
                      className="h-10 md:h-12 w-auto transition-transform duration-500 group-hover:scale-110"
                      whileHover={{ rotate: 5 }}
                    />
                  </div>
                  <div className={`flex flex-col ${
                    scrolled || isAgentPortal ? 'text-brand-navy' : 'text-white'
                  }`}>
                    <span className="font-bold text-sm md:text-base leading-tight">PA Real Estate</span>
                    <span className="text-xs md:text-sm leading-tight">Support Services</span>
                  </div>
                </div>
              </Link>
            </motion.div>

            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center space-x-2">
              {/* Primary navigation in a pill container */}
              <div className={`flex space-x-1 p-1 rounded-full ${
                scrolled || isAgentPortal
                  ? 'bg-gray-100'
                  : 'bg-black/20 backdrop-blur-sm'
              }`}>
                {navLinks.map((item, index) => (
                  <motion.div
                    key={item.path}
                    initial={false}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 0.05 + index * 0.05 }}
                  >
                    <Link
                      to={item.path}
                      className={`relative px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 flex items-center ${
                        location.pathname === item.path
                          ? scrolled || isAgentPortal
                              ? 'bg-brand-blue text-white shadow-md'
                              : 'bg-white/20 text-white shadow-md'
                          : scrolled || isAgentPortal
                              ? 'text-brand-navy hover:bg-gray-200'
                              : 'text-white hover:bg-white/20'
                      }`}
                    >
                      <item.icon size={16} className="mr-1.5" />
                      {item.label}
                      
                      {/* Active indicator */}
                      {location.pathname === item.path && (
                        <motion.span
                          layoutId="navIndicator"
                          className="absolute bottom-1 left-1/2 transform -translate-x-1/2 w-1 h-1 rounded-full bg-white"
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          transition={{ duration: 0.3 }}
                        />
                      )}
                    </Link>
                  </motion.div>
                ))}
              </div>

              {/* Agent Portal Button - Prominent CTA */}
              <Link
                to="/agent-portal"
                className="ml-2 bg-brand-gold text-brand-navy font-semibold rounded-full px-6 py-2 flex items-center hover:shadow-lg hover:bg-brand-cream transition-all duration-300 transform hover:-translate-y-0.5"
              >
                <FileText size={16} className="mr-1.5" />
                Start Transaction
              </Link>
            </div>

            {/* Mobile Menu Button */}
            <motion.button
              onClick={() => setIsOpen(!isOpen)}
              className="md:hidden p-2 rounded-full focus:outline-none"
              aria-label={isOpen ? "Close menu" : "Open menu"}
              whileTap={{ scale: 0.95 }}
              whileHover={{ scale: 1.05 }}
              data-mobile-menu-toggle="true"
            >
              <div className="relative w-6 h-6">
                <AnimatePresence mode="wait">
                  {isOpen ? (
                    <motion.div
                      key="close"
                      initial={{ opacity: 0, rotate: -90 }}
                      animate={{ opacity: 1, rotate: 0 }}
                      exit={{ opacity: 0, rotate: 90 }}
                      transition={{ duration: 0.2 }}
                    >
                      <X className={`w-6 h-6 ${
                        scrolled || isAgentPortal ? 'text-brand-navy' : 'text-white'
                      }`} />
                    </motion.div>
                  ) : (
                    <motion.div
                      key="menu"
                      initial={{ opacity: 0, rotate: 90 }}
                      animate={{ opacity: 1, rotate: 0 }}
                      exit={{ opacity: 0, rotate: -90 }}
                      transition={{ duration: 0.2 }}
                    >
                      <Menu className={`w-6 h-6 ${
                        scrolled || isAgentPortal ? 'text-brand-navy' : 'text-white'
                      }`} />
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>
            </motion.button>
          </nav>
        </div>

        {/* Mobile Menu */}
        <AnimatePresence>
          {isOpen && (
            <motion.div
              key="mobile-menu"
              initial="closed"
              animate="open"
              exit="closed"
              variants={menuVariants}
              className="absolute top-16 md:top-20 left-0 right-0 z-30 md:hidden"
            >
              <motion.div
                className="bg-white shadow-2xl rounded-b-2xl overflow-hidden mobile-menu"
              >
                <nav className="flex flex-col p-4 space-y-2">
                  {navLinks.map((item, index) => (
                    <motion.div
                      key={item.path}
                      variants={menuItemVariants}
                      className="overflow-hidden"
                    >
                      <Link
                        to={item.path}
                        className={`flex items-center px-4 py-3 rounded-xl transition-colors duration-300 ${
                          location.pathname === item.path
                            ? 'bg-brand-blue/10 text-brand-blue font-medium'
                            : 'text-brand-navy hover:bg-gray-50'
                        }`}
                        onClick={() => setIsOpen(false)}
                      >
                        <item.icon size={18} className={`mr-3 ${
                          location.pathname === item.path
                            ? 'text-brand-blue'
                            : 'text-gray-500'
                        }`} />
                        {item.label}
                      </Link>
                    </motion.div>
                  ))}

                  {/* Mobile CTA */}
                  <motion.div
                    variants={menuItemVariants}
                    className="pt-3 mt-4 border-t border-gray-100"
                  >
                    <Link
                      to="/agent-portal"
                      className="flex items-center justify-center w-full py-3 px-4 bg-brand-gold text-brand-navy font-medium rounded-xl shadow-md hover:bg-brand-cream transition-colors"
                      onClick={() => setIsOpen(false)}
                    >
                      <FileText size={18} className="mr-2" />
                      Start New Transaction
                    </Link>
                  </motion.div>

                  {/* Contact information for mobile */}
                  <motion.div
                    variants={menuItemVariants}
                    className="pt-3 mt-2 flex flex-col space-y-3 text-sm text-gray-600"
                  >
                    <a href="tel:+5705884637" className="flex items-center">
                      <Phone size={16} className="text-brand-blue mr-3" />
                      (570) 588-4637
                    </a>
                    <a href="mailto:debbie@parealestatesupport.com" className="flex items-center">
                      <Mail size={16} className="text-brand-blue mr-3" />
                      debbie@parealestatesupport.com
                    </a>
                  </motion.div>
                </nav>
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.header>
    </AnimatePresence>
  );
};

export default Header;